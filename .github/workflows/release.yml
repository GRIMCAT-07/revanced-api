name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Make sure the release step uses its own credentials:
          # https://github.com/cycjimmy/semantic-release-action#private-packages
          persist-credentials: false
          fetch-depth: 0

      - name: Cache Gradle
        uses: burrunan/gradle-cache-action@v1

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew startShadowScripts clean

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          fingerprint: ${{ vars.GPG_FINGERPRINT }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64, arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Release
        env:
          DOCKER_REGISTRY_USER: ${{ github.actor }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm exec semantic-release

      - name: Set Portainer stack webhook URL based on branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            PORTAINER_WEBHOOK_URL=${{ secrets.PORTAINER_WEBHOOK_MAIN_URL }}
          else
            PORTAINER_WEBHOOK_URL=${{ secrets.PORTAINER_WEBHOOK_DEV_URL }}
          fi
          echo "PORTAINER_WEBHOOK_URL=$PORTAINER_WEBHOOK_URL" >> $GITHUB_ENV

      - name: Trigger Portainer stack update
        uses: newarifrh/portainer-service-webhook@v1
        with:
          webhook_url: ${{ env.PORTAINER_WEBHOOK_URL }}

      - name: Purge outdated images
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'revanced-api'
          package-type: 'container'
          min-versions-to-keep: 5
          delete-only-untagged-versions: 'true'
          token: ${{ secrets.GITHUB_TOKEN }}
